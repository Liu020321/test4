<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>test4</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>test3 Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!-- jfinal -->
    <!-- https://mvnrepository.com/artifact/com.jfinal/jfinal -->
    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal</artifactId>
      <version>5.0.6</version>
    </dependency>


    <!-- jfinal-undertow 开发、部署一体化 web 服务器 -->
    <!-- https://mvnrepository.com/artifact/com.jfinal/jfinal-undertow -->
    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal-undertow</artifactId>
      <version>3.3</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/io.undertow/undertow-core -->
    <!-- https://mvnrepository.com/artifact/io.undertow/undertow-core -->
    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-core</artifactId>
      <version>2.3.0.Final</version>
    </dependency>



    <!-- log4j 日志 -->
    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.19.0</version>
    </dependency>


    <!-- mysql 驱动 -->
    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.30</version>
    </dependency>


    <!-- druid 数据源连接池 -->
    <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.2.14</version>
    </dependency>


    <!-- cos 文件上传 -->
    <!-- https://mvnrepository.com/artifact/com.jfinal/cos -->
    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>cos</artifactId>
      <version>2022.2</version>
    </dependency>

    <!-- Jfinal邮箱插件 -->
    <dependency>
      <groupId>cn.fsdev</groupId>
      <artifactId>jfinal-mail-plugin</artifactId>
      <version>3.0</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>test3</finalName>
    <pluginManagement>      <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <!--
				jar 包中的配置文件优先级高于 config 目录下的 "同名文件"
				因此，打包时需要排除掉 jar 包中来自 src/main/resources 目录的
				配置文件，否则部署时 config 目录中的同名配置文件不会生效
			 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <excludes>
              <!-- 
						     *.* 用法，可以匹配 jar 包根目录下所有文件
						     *.xxx 用法，可以匹配 jar 包根目录下特定扩展名文件，例如：*.xml
						     **/* 前缀用法，可以匹配所有路径，例如：**/*.txt
						     / 后缀用法，表示排除目录，例如：pro/
						     普通字符串用法，表示排除特定文件，例如: filename
						-->
              <exclude>*.*</exclude>
              <exclude>pro/</exclude>
              <exclude>dev/</exclude>
              <exclude>filename</exclude>
            </excludes>
          </configuration>
        </plugin>

        <!-- 
				使用 mvn clean package 打包 
				更多配置可参考官方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html
	 		-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>

              <configuration>
                <!-- 打包生成的文件名 -->
                <finalName>${project.artifactId}</finalName>
                <!-- jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 -->
                <recompressZippedFiles>false</recompressZippedFiles>
                <!-- 打包生成的文件是否要追加 package.xml 中定义的 id 值 -->
                <appendAssemblyId>true</appendAssemblyId>
                <!-- 指向打包描述文件 package.xml -->
                <descriptors>
                  <descriptor>package.xml</descriptor>
                </descriptors>
                <!-- 打包结果输出的基础目录 -->
                <outputDirectory>${project.build.directory}/</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
